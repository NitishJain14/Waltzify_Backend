const express = require("express");
const router = express.Router();
const productController = require("../controllers/productController");
const { uploadProductMedia } = require("../middlewares/uploadProductMedia");

// ================== USER ROUTES ==================

// ‚úÖ Get all active products with filters & pagination
router.get("/filter", productController.getFilteredProducts);

// ‚≠ê FIX: Move specific routes like /search and /all ABOVE /:id 
router.get('/search', productController.searchProducts);

router.get("/all", productController.getAllProductsFull);

// ‚úÖ Get single product by ID
// ‚ö†Ô∏è Keep this **LAST** among GET requests to avoid conflicts
router.get("/:id", productController.getProductById);


// ================== ADMIN ROUTES ==================
// (TODO: Add admin auth middleware like `authMiddleware.isAdmin`)

// ‚úÖ Create product with variants + media
router.post("/", uploadProductMedia, productController.createProduct);

// ‚úÖ Update product
router.put("/:id", uploadProductMedia, productController.updateProduct);

// ‚úÖ Delete product
router.delete("/:id", productController.deleteProduct);


// ‚úÖ Delete specific media file
// üëÜ Should come BEFORE `/:id` to avoid being caught as productId
router.delete("/media/:id", productController.deleteMedia);

router.get("/media/:id", productController.getProductMediaByProductId);


// ================== VARIANT ROUTES ==================

// ‚úÖ Create a variant for a product
router.post("/:productId/variant", productController.createVariant);

// ‚úÖ Update a variant
router.put("/variant/:id", productController.updateVariant);

// ‚úÖ Delete a variant
router.delete("/variant/:id", productController.deleteVariant);

module.exports = router;
